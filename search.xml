<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Springboot第一次请求接口特别慢的bug</title>
      <link href="/2024/03/28/springboot-di-yi-ci-qing-qiu-jie-kou-te-bie-man-de-bug/"/>
      <url>/2024/03/28/springboot-di-yi-ci-qing-qiu-jie-kou-te-bie-man-de-bug/</url>
      
        <content type="html"><![CDATA[<h2 id="Springboot第一次请求接口特别慢的bug"><a href="#Springboot第一次请求接口特别慢的bug" class="headerlink" title="Springboot第一次请求接口特别慢的bug"></a>Springboot第一次请求接口特别慢的bug</h2><blockquote><p>起因是线上的一个小程序，每次请求同一接口的第一次的时间特别慢，快一点的也得要9秒，慢的甚至超时。而且仅仅是一个单表的查询，所以要排查一下</p></blockquote><h3 id="1、本地环境测试"><a href="#1、本地环境测试" class="headerlink" title="1、本地环境测试"></a>1、本地环境测试</h3><blockquote><p>一开始怀疑是线上的网络有问题，在本地开发环境试了一下，第一次确实会比较慢，1.4秒，之后在请求就是200ms左右。没有跟线上一样</p></blockquote><img src="/2024/03/28/springboot-di-yi-ci-qing-qiu-jie-kou-te-bie-man-de-bug/image-20240328163153837-1711614722366-1.png" class="" title="image-20240328163153837"><img src="/2024/03/28/springboot-di-yi-ci-qing-qiu-jie-kou-te-bie-man-de-bug/image-20240328163254155-1711614776555-3.png" class="" title="image-20240328163254155"><blockquote><p>一开始看到是druid的连接时间比较长以为是druid数据库的配置有问题，但是改了之后发现并没有什么用</p></blockquote><h3 id="2、排查测试环境"><a href="#2、排查测试环境" class="headerlink" title="2、排查测试环境"></a>2、排查测试环境</h3><h4 id="2-1、测试环境nacos异常"><a href="#2-1、测试环境nacos异常" class="headerlink" title="2.1、测试环境nacos异常"></a>2.1、测试环境nacos异常</h4><blockquote><p>排查测试环境之前本来想先改下nacos的配置试一下，但是发现nacos配置文件列表加载不出来，报错ERROR clearConfigHistory error : org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC  Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out af ter 3000ms.</p><p>如下面这个图，配置列表是空的，这里当时没有截图，马赛克替代一下</p></blockquote><img src="/2024/03/28/springboot-di-yi-ci-qing-qiu-jie-kou-te-bie-man-de-bug/image-20240328163759192-1711615081489-5.png" class="" title="image-20240328163759192"><h4 id="2-2、-关闭nacos，重新启动失败"><a href="#2-2、-关闭nacos，重新启动失败" class="headerlink" title="2.2、 关闭nacos，重新启动失败"></a>2.2、 关闭nacos，重新启动失败</h4><blockquote><p>因为测试环境的数据库使用navicat是能连上的，虽然比较慢，这个时间看了下nacos的配置文件的连接超时时间也是60秒，所以应该不是因为超时时间太短造成的</p></blockquote><p>nacos的配置文件</p><figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright 1999-2021 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Spring Boot Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### Default web context path:</span></span><br><span class="line"><span class="attr">server.servlet.contextPath</span>=<span class="string">/nacos</span></span><br><span class="line"><span class="comment">### Default web server port:</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8848</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Network Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### If prefer hostname over ip for Nacos server addresses in cluster.conf:</span></span><br><span class="line"><span class="comment"># nacos.inetutils.prefer-hostname-over-ip=false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Specify local server's IP:</span></span><br><span class="line"><span class="comment"># nacos.inetutils.ip-address=</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Config Module Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### If use MySQL as datasource:</span></span><br><span class="line"><span class="attr">spring.datasource.platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Count of DB:</span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Connect URL of DB:</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/ry-cloud-config?characterEncoding=utf8&amp;connectTimeout=60000&amp;socketTimeout=60000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line"><span class="attr">db.user.0</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">db.password.0</span>=<span class="string">123456</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Connection pool configuration: hikariCP</span></span><br><span class="line"><span class="attr">db.pool.config.connectionTimeout</span>=<span class="string">30000</span></span><br><span class="line"><span class="attr">db.pool.config.validationTimeout</span>=<span class="string">10000</span></span><br><span class="line"><span class="attr">db.pool.config.maximumPoolSize</span>=<span class="string">20</span></span><br><span class="line"><span class="attr">db.pool.config.minimumIdle</span>=<span class="string">2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Naming Module Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### Data dispatch task execution period in milliseconds: Will removed on v2.1.X, replace with nacos.core.protocol.distro.data.sync.delayMs</span></span><br><span class="line"><span class="comment"># nacos.naming.distro.taskDispatchPeriod=200</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Data count of batch sync task: Will removed on v2.1.X. Deprecated</span></span><br><span class="line"><span class="comment"># nacos.naming.distro.batchSyncKeyCount=1000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Retry delay in milliseconds if sync task failed: Will removed on v2.1.X, replace with nacos.core.protocol.distro.data.sync.retryDelayMs</span></span><br><span class="line"><span class="comment"># nacos.naming.distro.syncRetryDelay=5000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### If enable data warmup. If set to false, the server would accept request without local data preparation:</span></span><br><span class="line"><span class="comment"># nacos.naming.data.warmup=true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### If enable the instance auto expiration, kind like of health check of instance:</span></span><br><span class="line"><span class="comment"># nacos.naming.expireInstance=true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### will be removed and replaced by `nacos.naming.clean` properties</span></span><br><span class="line"><span class="attr">nacos.naming.empty-service.auto-clean</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">nacos.naming.empty-service.clean.initial-delay-ms</span>=<span class="string">50000</span></span><br><span class="line"><span class="attr">nacos.naming.empty-service.clean.period-time-ms</span>=<span class="string">30000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Add in 2.0.0</span></span><br><span class="line"><span class="comment">### The interval to clean empty service, unit: milliseconds.</span></span><br><span class="line"><span class="comment"># nacos.naming.clean.empty-service.interval=60000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The expired time to clean empty service, unit: milliseconds.</span></span><br><span class="line"><span class="comment"># nacos.naming.clean.empty-service.expired-time=60000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The interval to clean expired metadata, unit: milliseconds.</span></span><br><span class="line"><span class="comment"># nacos.naming.clean.expired-metadata.interval=5000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The expired time to clean metadata, unit: milliseconds.</span></span><br><span class="line"><span class="comment"># nacos.naming.clean.expired-metadata.expired-time=60000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The delay time before push task to execute from service changed, unit: milliseconds.</span></span><br><span class="line"><span class="comment"># nacos.naming.push.pushTaskDelay=500</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The timeout for push task execute, unit: milliseconds.</span></span><br><span class="line"><span class="comment"># nacos.naming.push.pushTaskTimeout=5000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The delay time for retrying failed push task, unit: milliseconds.</span></span><br><span class="line"><span class="comment"># nacos.naming.push.pushTaskRetryDelay=1000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Since 2.0.3</span></span><br><span class="line"><span class="comment">### The expired time for inactive client, unit: milliseconds.</span></span><br><span class="line"><span class="comment"># nacos.naming.client.expired.time=180000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** CMDB Module Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### The interval to dump external CMDB in seconds:</span></span><br><span class="line"><span class="comment"># nacos.cmdb.dumpTaskInterval=3600</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The interval of polling data change event in seconds:</span></span><br><span class="line"><span class="comment"># nacos.cmdb.eventTaskInterval=10</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The interval of loading labels in seconds:</span></span><br><span class="line"><span class="comment"># nacos.cmdb.labelTaskInterval=300</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### If turn on data loading task:</span></span><br><span class="line"><span class="comment"># nacos.cmdb.loadDataAtStart=false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Metrics Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### Metrics for prometheus</span></span><br><span class="line"><span class="comment">#management.endpoints.web.exposure.include=*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Metrics for elastic search</span></span><br><span class="line"><span class="attr">management.metrics.export.elastic.enabled</span>=<span class="string">false</span></span><br><span class="line"><span class="comment">#management.metrics.export.elastic.host=http://localhost:9200</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Metrics for influx</span></span><br><span class="line"><span class="attr">management.metrics.export.influx.enabled</span>=<span class="string">false</span></span><br><span class="line"><span class="comment">#management.metrics.export.influx.db=springboot</span></span><br><span class="line"><span class="comment">#management.metrics.export.influx.uri=http://localhost:8086</span></span><br><span class="line"><span class="comment">#management.metrics.export.influx.auto-create-db=true</span></span><br><span class="line"><span class="comment">#management.metrics.export.influx.consistency=one</span></span><br><span class="line"><span class="comment">#management.metrics.export.influx.compressed=true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Access Log Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### If turn on the access log:</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The access log pattern:</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.pattern</span>=<span class="string">%h %l %u %t "%r" %s %b %D %{User-Agent}i %{Request-Source}i</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The directory of access log:</span></span><br><span class="line"><span class="attr">server.tomcat.basedir</span>=<span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Access Control Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### If enable spring security, this option is deprecated in 1.2.0:</span></span><br><span class="line"><span class="comment">#spring.security.enabled=false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The ignore urls of auth, is deprecated in 1.2.0:</span></span><br><span class="line"><span class="attr">nacos.security.ignore.urls</span>=<span class="string">/,/error,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.ico,/console-ui/public/**,/v1/auth/**,/v1/console/health/**,/actuator/**,/v1/console/server/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The auth system to use, currently only 'nacos' and 'ldap' is supported:</span></span><br><span class="line"><span class="attr">nacos.core.auth.system.type</span>=<span class="string">nacos</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### If turn on auth system:</span></span><br><span class="line"><span class="attr">nacos.core.auth.enabled</span>=<span class="string">false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### worked when nacos.core.auth.system.type=ldap，{0} is Placeholder,replace login username</span></span><br><span class="line"><span class="comment"># nacos.core.auth.ldap.url=ldap://localhost:389</span></span><br><span class="line"><span class="comment"># nacos.core.auth.ldap.userdn=cn={0},ou=user,dc=company,dc=com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The token expiration in seconds:</span></span><br><span class="line"><span class="attr">nacos.core.auth.default.token.expire.seconds</span>=<span class="string">18000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### The default token:</span></span><br><span class="line"><span class="attr">nacos.core.auth.default.token.secret.key</span>=<span class="string">SecretKey012345678901234567890123456789012345678901234567890123456789</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Turn on/off caching of auth information. By turning on this switch, the update of auth information would have a 15 seconds delay.</span></span><br><span class="line"><span class="attr">nacos.core.auth.caching.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Since 1.4.1, Turn on/off white auth for user-agent: nacos-server, only for upgrade from old version.</span></span><br><span class="line"><span class="attr">nacos.core.auth.enable.userAgentAuthWhite</span>=<span class="string">false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Since 1.4.1, worked when nacos.core.auth.enabled=true and nacos.core.auth.enable.userAgentAuthWhite=false.</span></span><br><span class="line"><span class="comment">### The two properties is the white list for auth and used by identity the request from other server.</span></span><br><span class="line"><span class="attr">nacos.core.auth.server.identity.key</span>=<span class="string">serverIdentity</span></span><br><span class="line"><span class="attr">nacos.core.auth.server.identity.value</span>=<span class="string">security</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Istio Related Configurations ***************#</span></span><br><span class="line"><span class="comment">### If turn on the MCP server:</span></span><br><span class="line"><span class="attr">nacos.istio.mcp.server.enabled</span>=<span class="string">false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Core Related Configurations ***************#</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### set the WorkerID manually</span></span><br><span class="line"><span class="comment"># nacos.core.snowflake.worker-id=</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Member-MetaData</span></span><br><span class="line"><span class="comment"># nacos.core.member.meta.site=</span></span><br><span class="line"><span class="comment"># nacos.core.member.meta.adweight=</span></span><br><span class="line"><span class="comment"># nacos.core.member.meta.weight=</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### MemberLookup</span></span><br><span class="line"><span class="comment">### Addressing pattern category, If set, the priority is highest</span></span><br><span class="line"><span class="comment"># nacos.core.member.lookup.type=[file,address-server]</span></span><br><span class="line"><span class="comment">## Set the cluster list with a configuration file or command-line argument</span></span><br><span class="line"><span class="comment"># nacos.member.list=192.168.16.101:8847?raft_port=8807,192.168.16.101?raft_port=8808,192.168.16.101:8849?raft_port=8809</span></span><br><span class="line"><span class="comment">## for AddressServerMemberLookup</span></span><br><span class="line"><span class="comment"># Maximum number of retries to query the address server upon initialization</span></span><br><span class="line"><span class="comment"># nacos.core.address-server.retry=5</span></span><br><span class="line"><span class="comment">## Server domain name address of [address-server] mode</span></span><br><span class="line"><span class="comment"># address.server.domain=jmenv.tbsite.net</span></span><br><span class="line"><span class="comment">## Server port of [address-server] mode</span></span><br><span class="line"><span class="comment"># address.server.port=8080</span></span><br><span class="line"><span class="comment">## Request address of [address-server] mode</span></span><br><span class="line"><span class="comment"># address.server.url=/nacos/serverlist</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** JRaft Related Configurations ***************#</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Sets the Raft cluster election timeout, default value is 5 second</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.raft.data.election_timeout_ms=5000</span></span><br><span class="line"><span class="comment">### Sets the amount of time the Raft snapshot will execute periodically, default is 30 minute</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.raft.data.snapshot_interval_secs=30</span></span><br><span class="line"><span class="comment">### raft internal worker threads</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.raft.data.core_thread_num=8</span></span><br><span class="line"><span class="comment">### Number of threads required for raft business request processing</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.raft.data.cli_service_thread_num=4</span></span><br><span class="line"><span class="comment">### raft linear read strategy. Safe linear reads are used by default, that is, the Leader tenure is confirmed by heartbeat</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.raft.data.read_index_type=ReadOnlySafe</span></span><br><span class="line"><span class="comment">### rpc request timeout, default 5 seconds</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.raft.data.rpc_request_timeout_ms=5000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#*************** Distro Related Configurations ***************#</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Distro data sync delay time, when sync task delayed, task will be merged for same data key. Default 1 second.</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.distro.data.sync.delayMs=1000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Distro data sync timeout for one sync data, default 3 seconds.</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.distro.data.sync.timeoutMs=3000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Distro data sync retry delay time when sync data failed or timeout, same behavior with delayMs, default 3 seconds.</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.distro.data.sync.retryDelayMs=3000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Distro data verify interval time, verify synced data whether expired for a interval. Default 5 seconds.</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.distro.data.verify.intervalMs=5000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Distro data verify timeout for one verify, default 3 seconds.</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.distro.data.verify.timeoutMs=3000</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Distro data load retry delay when load snapshot data failed, default 30 seconds.</span></span><br><span class="line"><span class="comment"># nacos.core.protocol.distro.data.load.retryDelayMs=30000</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><p>所以就想重启下nacos，结果关了之后启动不了了。报错：ERROR: Please set the JAVA_HOME variable in your environment, We need java(x64)! jdk8 or later is better! !!</p></blockquote><p>百度了一下这个原因：</p><ol><li>没有安装JDK，我是安装的有的</li><li>没有设置JAVA_HOME变量，我看了下自己的/etc/profile文件里面也设置了，并且java -version命令也好使</li><li>startup.sh脚本有问题，因为本来是好使的，所以一开始排除了这个选项，最后无奈之下试了这个，发现这个有点问题</li></ol><p>这里需要把[ ! -e “$JAVA_HOME/bin/java” ] &amp;&amp; JAVA_HOME=$HOME/jdk/java<br>[ ! -e “$JAVA_HOME/bin/java” ] &amp;&amp; JAVA_HOME=/usr/java<br>[ ! -e “$JAVA_HOME/bin/java” ] &amp;&amp; JAVA_HOME=/opt/taobao/java<br>[ ! -e “$JAVA_HOME/bin/java” ] &amp;&amp; unset JAVA_HOME</p><p>这四行注释掉，在下面添加一行</p><p>JAVA_HOME = JDK安装目录的位置</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copyright 1999-2018 Alibaba Group Holding Ltd.</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line">cygwin=<span class="literal">false</span></span><br><span class="line">darwin=<span class="literal">false</span></span><br><span class="line">os400=<span class="literal">false</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"`uname`"</span> <span class="keyword">in</span></span><br><span class="line">CYGWIN*) cygwin=<span class="literal">true</span>;;</span><br><span class="line">Darwin*) darwin=<span class="literal">true</span>;;</span><br><span class="line">OS400*) os400=<span class="literal">true</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="function"><span class="title">error_exit</span></span> ()</span><br><span class="line">{</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ERROR: <span class="variable">$1</span> !!"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">}</span><br><span class="line"><span class="comment"># 注释掉[ ! -e "$JAVA_HOME/bin/java" ] &amp;&amp; JAVA_HOME=$HOME/jdk/java</span></span><br><span class="line"><span class="comment"># 注释掉[ ! -e "$JAVA_HOME/bin/java" ] &amp;&amp; JAVA_HOME=/usr/java</span></span><br><span class="line"><span class="comment"># 注释掉[ ! -e "$JAVA_HOME/bin/java" ] &amp;&amp; JAVA_HOME=/opt/taobao/java</span></span><br><span class="line"><span class="comment"># 注释掉[ ! -e "$JAVA_HOME/bin/java" ] &amp;&amp; unset JAVA_HOME</span></span><br><span class="line"><span class="comment">#新加的</span></span><br><span class="line">JAVA_HOME = JDK安装目录的位置</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$JAVA_HOME</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> <span class="variable">$darwin</span>; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -x <span class="string">'/usr/libexec/java_home'</span> ] ; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">export</span> JAVA_HOME=`/usr/libexec/java_home`</span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> [ -d <span class="string">"/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home"</span> ]; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">export</span> JAVA_HOME=<span class="string">"/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    JAVA_PATH=`<span class="built_in">dirname</span> $(<span class="built_in">readlink</span> -f $(<span class="built_in">which</span> javac))`</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"x<span class="variable">$JAVA_PATH</span>"</span> != <span class="string">"x"</span> ]; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">export</span> JAVA_HOME=`<span class="built_in">dirname</span> <span class="variable">$JAVA_PATH</span> 2&gt;/dev/null`</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$JAVA_HOME</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        error_exit <span class="string">"Please set the JAVA_HOME variable in your environment, We need java(x64)! jdk8 or later is better!"</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> SERVER=<span class="string">"nacos-server"</span></span><br><span class="line"><span class="built_in">export</span> MODE=<span class="string">"cluster"</span></span><br><span class="line"><span class="built_in">export</span> FUNCTION_MODE=<span class="string">"all"</span></span><br><span class="line"><span class="built_in">export</span> MEMBER_LIST=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> EMBEDDED_STORAGE=<span class="string">""</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">":m:f:s:c:p:"</span> opt</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$opt</span> <span class="keyword">in</span></span><br><span class="line">        m)</span><br><span class="line">            MODE=<span class="variable">$OPTARG</span>;;</span><br><span class="line">        f)</span><br><span class="line">            FUNCTION_MODE=<span class="variable">$OPTARG</span>;;</span><br><span class="line">        s)</span><br><span class="line">            SERVER=<span class="variable">$OPTARG</span>;;</span><br><span class="line">        c)</span><br><span class="line">            MEMBER_LIST=<span class="variable">$OPTARG</span>;;</span><br><span class="line">        p)</span><br><span class="line">            EMBEDDED_STORAGE=<span class="variable">$OPTARG</span>;;</span><br><span class="line">        ?)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Unknown parameter"</span></span><br><span class="line">        <span class="built_in">exit</span> 1;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME</span><br><span class="line"><span class="built_in">export</span> JAVA=<span class="string">"<span class="variable">$JAVA_HOME</span>/bin/java"</span></span><br><span class="line"><span class="built_in">export</span> BASE_DIR=`<span class="built_in">cd</span> $(<span class="built_in">dirname</span> <span class="variable">$0</span>)/..; <span class="built_in">pwd</span>`</span><br><span class="line"><span class="built_in">export</span> CUSTOM_SEARCH_LOCATIONS=file:<span class="variable">${BASE_DIR}</span>/conf/</span><br><span class="line"></span><br><span class="line"><span class="comment">#===========================================================================================</span></span><br><span class="line"><span class="comment"># JVM Configuration</span></span><br><span class="line"><span class="comment">#===========================================================================================</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">${MODE}</span>"</span> == <span class="string">"standalone"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -Xms512m -Xmx512m -Xmn256m"</span></span><br><span class="line">    JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -Dnacos.standalone=true"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">"<span class="variable">${EMBEDDED_STORAGE}</span>"</span> == <span class="string">"embedded"</span> ]]; <span class="keyword">then</span></span><br><span class="line">        JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -DembeddedStorage=true"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -server -Xms2g -Xmx2g -Xmn1g -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m"</span></span><br><span class="line">    JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=<span class="variable">${BASE_DIR}</span>/logs/java_heapdump.hprof"</span></span><br><span class="line">    JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -XX:-UseLargePages"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">${FUNCTION_MODE}</span>"</span> == <span class="string">"config"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -Dnacos.functionMode=config"</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">"<span class="variable">${FUNCTION_MODE}</span>"</span> == <span class="string">"naming"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -Dnacos.functionMode=naming"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -Dnacos.member.list=<span class="variable">${MEMBER_LIST}</span>"</span></span><br><span class="line"></span><br><span class="line">JAVA_MAJOR_VERSION=$(<span class="variable">$JAVA</span> -version 2&gt;&amp;1 | sed -E -n <span class="string">'s/.* version "([0-9]*).*$/\1/p'</span>)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$JAVA_MAJOR_VERSION</span>"</span> -ge <span class="string">"9"</span> ]] ; <span class="keyword">then</span></span><br><span class="line">  JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -Xlog:gc*:file=<span class="variable">${BASE_DIR}</span>/logs/nacos_gc.log:time,tags:filecount=10,filesize=102400"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  JAVA_OPT_EXT_FIX=<span class="string">"-Djava.ext.dirs=<span class="variable">${JAVA_HOME}</span>/jre/lib/ext:<span class="variable">${JAVA_HOME}</span>/lib/ext"</span></span><br><span class="line">  JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -Xloggc:<span class="variable">${BASE_DIR}</span>/logs/nacos_gc.log -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=100M"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -Dloader.path=<span class="variable">${BASE_DIR}</span>/plugins/health,<span class="variable">${BASE_DIR}</span>/plugins/cmdb"</span></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -Dnacos.home=<span class="variable">${BASE_DIR}</span>"</span></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> -jar <span class="variable">${BASE_DIR}</span>/target/<span class="variable">${SERVER}</span>.jar"</span></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> <span class="variable">${JAVA_OPT_EXT}</span>"</span></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> --spring.config.additional-location=<span class="variable">${CUSTOM_SEARCH_LOCATIONS}</span>"</span></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> --logging.config=<span class="variable">${BASE_DIR}</span>/conf/nacos-logback.xml"</span></span><br><span class="line">JAVA_OPT=<span class="string">"<span class="variable">${JAVA_OPT}</span> --server.max-http-header-size=524288"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">${BASE_DIR}</span>/logs"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">mkdir</span> <span class="variable">${BASE_DIR}</span>/logs</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$JAVA</span> <span class="variable">$JAVA_OPT_EXT_FIX</span> <span class="variable">${JAVA_OPT}</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">${MODE}</span>"</span> == <span class="string">"standalone"</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"nacos is starting with standalone"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"nacos is starting with cluster"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check the start.out log output file</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">"<span class="variable">${BASE_DIR}</span>/logs/start.out"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">touch</span> <span class="string">"<span class="variable">${BASE_DIR}</span>/logs/start.out"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># start</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$JAVA</span> <span class="variable">$JAVA_OPT_EXT_FIX</span> <span class="variable">${JAVA_OPT}</span>"</span> &gt; <span class="variable">${BASE_DIR}</span>/logs/start.out 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="built_in">nohup</span> <span class="string">"<span class="variable">$JAVA</span>"</span> <span class="string">"<span class="variable">$JAVA_OPT_EXT_FIX</span>"</span> <span class="variable">${JAVA_OPT}</span> nacos.nacos &gt;&gt; <span class="variable">${BASE_DIR}</span>/logs/start.out 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"nacos is starting，you can check the <span class="variable">${BASE_DIR}</span>/logs/start.out"</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><p>这样吧改完了之后开始不报刚才的错误了，但是还是无法启动，报错：Caused by: java.lang.IllegalStateException: No DataSource set</p></blockquote><p>网上查了很多，基本上说的原因是以下几种</p><ol><li>nacos配置文件没有配置数据源</li><li>数据库的密码用户名错误</li><li>数据库的连接写错了</li><li>数据库连接的超时时间太短</li><li>给数据库的连接加上 &amp;serverTimezone=UTC 以及 &amp;allowPublicKeyRetrieval=true</li></ol><p>但是我的情况和上面都不符合</p><h4 id="2-3、-测试服务器之间是否连通"><a href="#2-3、-测试服务器之间是否连通" class="headerlink" title="2.3、 测试服务器之间是否连通"></a>2.3、 测试服务器之间是否连通</h4><blockquote><p>纠结了半天没办法，想试一下两台服务器之间是否能连通，使用telnet 方式是没有问题的，于是尝试在数据库的服务器上直接连接数据库。发现本地连接很快随后尝试使用这台服务器自身的IP访问，发现很慢，要18秒</p></blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">本地连接</span></span><br><span class="line">mysql -u root -p</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用ip连接</span></span><br><span class="line">msyql -u root -h ip地址如：192.176.1.1 -P 3306 -p</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">示例</span></span><br><span class="line">msyql -u root -h 192.168.1.1 -P 3306 -p</span><br></pre></td></tr></tbody></table></figure><h4 id="2-4-、定位问题"><a href="#2-4-、定位问题" class="headerlink" title="2.4 、定位问题"></a>2.4 、定位问题</h4><blockquote><p>经过上面的排查，问题应该出现在了mysql的配置文件上。百度了一下之后发现有这个一个配置，在msyql的配置文件 my.cnf上添加以下配置，一般这个配置文件在/etc下面</p></blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">skip-name-resolve</span><br></pre></td></tr></tbody></table></figure><blockquote><p>msyql的官网上是说，不管连接是通过hosts还是IP的模式，都会对DNS进行反查，IP-&gt;DNS</p><p>就像域名解析一样，不管过来的是域名还是IP，他都会先查一遍域名解析配置，找不到了才会走IP的形式</p><p>所以就会导致他很慢</p></blockquote><h3 id="3、-解决问题"><a href="#3、-解决问题" class="headerlink" title="3、 解决问题"></a>3、 解决问题</h3><blockquote><p>按上面的在my.cnf上加上配置，重启mysql服务。然后回到nacos的服务器上，重新启动nacos，果然就成功了。并且试了一下接口的调用，快的飞起。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> bug </category>
          
          <category> MySQL </category>
          
          <category> nacos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> bug </tag>
            
            <tag> nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux防火墙相关命令</title>
      <link href="/2024/03/19/linux-fang-huo-qiang-xiang-guan-ming-ling/"/>
      <url>/2024/03/19/linux-fang-huo-qiang-xiang-guan-ming-ling/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux防火墙相关命令"><a href="#Linux防火墙相关命令" class="headerlink" title="Linux防火墙相关命令"></a>Linux防火墙相关命令</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>firwall-cmd：是Linux提供的操作firewall的一个工具； </p><p>–permanent：表示设置为持久；</p><p> –add-port：标识添加的端口；</p></blockquote><h3 id="1、防火墙端口相关命令"><a href="#1、防火墙端口相关命令" class="headerlink" title="1、防火墙端口相关命令"></a>1、防火墙端口相关命令</h3><ul><li>对外暴露端口</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br></pre></td></tr></tbody></table></figure><ul><li>移除端口</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent</span><br></pre></td></tr></tbody></table></figure><ul><li>查看防火墙开放关口</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-ports</span><br></pre></td></tr></tbody></table></figure><ul><li>查看防火墙所有信息</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></tbody></table></figure><h3 id="2、-防火墙策略相关命令"><a href="#2、-防火墙策略相关命令" class="headerlink" title="2、 防火墙策略相关命令"></a>2、 防火墙策略相关命令</h3><blockquote><p>source address：访问当前机器的IP</p><p>port：当前机器被访问的端口</p></blockquote><ul><li>防火墙添加策略</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-rich-rule='rule family="ipv4" source address="2.22.193.10" port port="9900" protocol="tcp" accept'   --permanent</span><br></pre></td></tr></tbody></table></figure><ul><li>防火墙移除策略</li></ul><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-rich-rule='rule family="ipv4" source address="2.22.129.10" port port="9900" protocol="tcp" accept'   --permanent</span><br></pre></td></tr></tbody></table></figure><h3 id="3、-防火墙状态、开启、关闭、重新加载"><a href="#3、-防火墙状态、开启、关闭、重新加载" class="headerlink" title="3、 防火墙状态、开启、关闭、重新加载"></a>3、 防火墙状态、开启、关闭、重新加载</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">状态</span></span><br><span class="line">firewall-cmd --state</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">开启</span></span><br><span class="line">service firewalld start</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启</span></span><br><span class="line">service firewalld restart</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">关闭</span></span><br><span class="line">service firewalld stop</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重载</span></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL索引不生效的十大经典场景</title>
      <link href="/2024/03/19/mysql-suo-yin-bu-sheng-xiao-de-shi-da-jing-dian-chang-jing/"/>
      <url>/2024/03/19/mysql-suo-yin-bu-sheng-xiao-de-shi-da-jing-dian-chang-jing/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL索引不生效的十大经典场景"><a href="#MySQL索引不生效的十大经典场景" class="headerlink" title="MySQL索引不生效的十大经典场景"></a>MySQL索引不生效的十大经典场景</h2><blockquote><p>MySQL索引不生效的十大经典场景</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 索引 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL语句执行顺序</title>
      <link href="/2024/03/18/mysql-yu-ju-zhi-xing-shun-xu/"/>
      <url>/2024/03/18/mysql-yu-ju-zhi-xing-shun-xu/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL语句执行顺序"><a href="#MySQL语句执行顺序" class="headerlink" title="MySQL语句执行顺序"></a>MySQL语句执行顺序</h2><ol><li>from：查询开始时，首先从执行的表（或表的连接）中获取数据，这是查询的起点</li><li>where：如果查询包含where子句，MySQL将根据where子句中的条件来筛选，只有满足条件的行才会被包括在结果集中，这是筛选数据的阶段</li><li>group by：如果查询中包含group by 子句，mysql将根据group by 子句中指定的列对数据进行分组，分组后的数据集用于后续的聚合计算</li><li>having：对分组后的数据用having子句中的条件进行筛选，满足条件的会包含在结果集中</li><li>select：select用于选择要包含在结果集中的列。选择要返回的数据的阶段</li><li>order by：按照order by子句中指定的列对结果集进行排序</li><li>limit：限制结果集的大小，只返回前N行</li><li>执行计划生成和执行：根据查询语句生成执行计划，优化查询方式，执行查询。可能设计索引的引用、连接操作、临时表的创建</li><li>返回结果：将结果返回客户端</li></ol>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysqldump备份库表脚本</title>
      <link href="/2024/03/18/mysqldump-bei-fen-ku-biao-jiao-ben/"/>
      <url>/2024/03/18/mysqldump-bei-fen-ku-biao-jiao-ben/</url>
      
        <content type="html"><![CDATA[<h2 id="mysqldump备份库表脚本"><a href="#mysqldump备份库表脚本" class="headerlink" title="mysqldump备份库表脚本"></a>mysqldump备份库表脚本</h2><h3 id="1、语法"><a href="#1、语法" class="headerlink" title="1、语法"></a>1、语法</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">--备份表</span><br><span class="line">mysqldump -u[用户名] -p[密码] [选项] [数据库名] [数据表名] &gt; /备份路径/备份文件名.sql</span><br><span class="line">--备份某个库</span><br><span class="line">mysqldump -uroot -p studysql &gt; test.sql</span><br><span class="line">--备份多个库</span><br><span class="line">mysqldump -uroot -proot --databases leetcode nacos&gt; test2.sql</span><br><span class="line">--备份所有库</span><br><span class="line">mysqldump -uroot -proot --all-databases &gt; test3.sql</span><br></pre></td></tr></tbody></table></figure><h3 id="2、Linux下创建定时任务"><a href="#2、Linux下创建定时任务" class="headerlink" title="2、Linux下创建定时任务"></a>2、Linux下创建定时任务</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -e #编辑定时任务</span><br><span class="line">service crond restart #重启定时服务相关</span><br></pre></td></tr></tbody></table></figure><h3 id="3、Linux上定时执行备份的脚本"><a href="#3、Linux上定时执行备份的脚本" class="headerlink" title="3、Linux上定时执行备份的脚本"></a>3、Linux上定时执行备份的脚本</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">MySQL数据库配置</span></span><br><span class="line">DB_HOST="localhost"</span><br><span class="line">DB_PORT="3306"</span><br><span class="line">DB_USER="root"</span><br><span class="line">DB_PASSWORD="1234"</span><br><span class="line">DB_NAME="master-data-test-bak"</span><br><span class="line">DB_NAME1="lx-cloud-data-test-back"</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份保存路径</span></span><br><span class="line">BACKUP_DIR="/work/mysql-backup"</span><br><span class="line">DATE=$(date +%Y%m%d%H%M%S) # 当前日期作为备份文件名的一部分</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建备份文件夹</span></span><br><span class="line">mkdir -p $BACKUP_DIR</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行备份</span></span><br><span class="line">mysqldump -h$DB_HOST -P$DB_PORT -u$DB_USER -p$DB_PASSWORD $DB_NAME &gt; $BACKUP_DIR/$DB_NAME$DATE.sql</span><br><span class="line">mysqldump -h$DB_HOST -P$DB_PORT -u$DB_USER -p$DB_PASSWORD $DB_NAME1 &gt; $BACKUP_DIR/$DB_NAME1$DATE.sql</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查备份是否成功</span></span><br><span class="line">if [ $? -eq 0 ]; then</span><br><span class="line">    echo "MySQL backup successfully created: $BACKUP_DIR/$DB_NAME$DATE.sql"</span><br><span class="line">    echo "MySQL backup successfully created: $BACKUP_DIR/$DB_NAME1$DATE.sql"</span><br><span class="line">else</span><br><span class="line">    echo "MySQL backup failed!"</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">脚本中的字符串如果用$前面加 \ 进行转义</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>将该脚本添加到定时任务执行</p></blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑定时</span></span><br><span class="line">crontab -e</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">凌晨3点执行脚本 改完就生效，不用重启等</span></span><br><span class="line">0 3 * * * /bin/bash /path/to/mysql_backup.sh</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MySQL </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Map中的compute、computeIfAbsent和computeIfPresent的使用和区别</title>
      <link href="/2024/03/15/map-zhong-de-compute-computeifabsent-he-computeifpresent-de-shi-yong-he-qu-bie/"/>
      <url>/2024/03/15/map-zhong-de-compute-computeifabsent-he-computeifpresent-de-shi-yong-he-qu-bie/</url>
      
        <content type="html"><![CDATA[<h2 id="Map中的compute、computeIfAbsent和computeIfPresent的使用和区别"><a href="#Map中的compute、computeIfAbsent和computeIfPresent的使用和区别" class="headerlink" title="Map中的compute、computeIfAbsent和computeIfPresent的使用和区别"></a>Map中的compute、computeIfAbsent和computeIfPresent的使用和区别</h2><blockquote><p>先准备一个简单的map数据吧</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;Long, String&gt; testMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">testMap.put(<span class="number">1L</span>, <span class="string">"张三"</span>);</span><br><span class="line">testMap.put(<span class="number">2L</span>, <span class="string">"李四"</span>);</span><br><span class="line">testMap.put(<span class="number">3L</span>, <span class="string">"王五"</span>);</span><br></pre></td></tr></tbody></table></figure><h3 id="1、computeIfAbsent"><a href="#1、computeIfAbsent" class="headerlink" title="1、computeIfAbsent"></a>1、computeIfAbsent</h3><blockquote><p>简单来说这个方法就是根据第一个参数key，去查询map，==只有当返回值为null即Map中查询不到对应的数据时，向Map中添加一条数据==</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试，没有新增</span></span><br><span class="line">testMap.computeIfAbsent(<span class="number">4L</span>, aLong -&gt; <span class="string">"computeIfAbsent"</span>);</span><br><span class="line"><span class="comment">//有返回值，不做任何操作</span></span><br><span class="line">testMap.computeIfAbsent(<span class="number">3L</span>, aLong -&gt; <span class="string">"computeIfAbsent2"</span>);</span><br></pre></td></tr></tbody></table></figure><p>操作之前的截图</p><img src="/2024/03/15/map-zhong-de-compute-computeifabsent-he-computeifpresent-de-shi-yong-he-qu-bie/cc4172757996496ab58fa316ef2ad212.png" class="" title="在这里插入图片描述"><p>没有的新增</p><img src="/2024/03/15/map-zhong-de-compute-computeifabsent-he-computeifpresent-de-shi-yong-he-qu-bie/8653ca3461934f719c18e433d4f650d1.png" class="" title="在这里插入图片描述"><p>有的不做操作</p><img src="/2024/03/15/map-zhong-de-compute-computeifabsent-he-computeifpresent-de-shi-yong-he-qu-bie/66775c91dffb47f183d295dfeb63090d.png" class="" title="在这里插入图片描述"><h3 id="2、computeIfPresent"><a href="#2、computeIfPresent" class="headerlink" title="2、computeIfPresent"></a>2、computeIfPresent</h3><blockquote><p>简单来说这个方法就是根据第一个参数key，去查询map，如果==查询到了就更新对应的值，如果查询不到，不做任何操作==</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Map中有就更新，没有不做操作</span></span><br><span class="line">testMap.computeIfPresent(<span class="number">2L</span>, (aLong, s) -&gt; <span class="string">"computeIfPresent"</span>);</span><br><span class="line"><span class="comment">//Map中没有不做操作</span></span><br><span class="line">testMap.computeIfPresent(<span class="number">5L</span>, (aLong, s) -&gt; <span class="string">"computeIfPresent2"</span>);</span><br></pre></td></tr></tbody></table></figure><p>有就更新</p><img src="/2024/03/15/map-zhong-de-compute-computeifabsent-he-computeifpresent-de-shi-yong-he-qu-bie/c9aaaa52559d4dd4b1f7e6f82e5f62eb.png" class="" title="在这里插入图片描述"><p>没有不做操作</p><img src="/2024/03/15/map-zhong-de-compute-computeifabsent-he-computeifpresent-de-shi-yong-he-qu-bie/b25830c2a5014b4e93188da517f6ae46.png" class="" title="在这里插入图片描述"><h3 id="3、compute"><a href="#3、compute" class="headerlink" title="3、compute"></a>3、compute</h3><blockquote><p>简单来说这个方法就是根据第一个参数key，去查询map，==无论是否查询到，都会执行第二个方法体，没有就新增，有就更新值==</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">testMap.compute(<span class="number">1L</span>, (aLong, s) -&gt; <span class="string">"compute"</span>);</span><br><span class="line">testMap.compute(<span class="number">6L</span>, (aLong, s) -&gt; <span class="string">"compute2"</span>);</span><br></pre></td></tr></tbody></table></figure><p>有就更新</p><img src="/2024/03/15/map-zhong-de-compute-computeifabsent-he-computeifpresent-de-shi-yong-he-qu-bie/6e9a4b4754094ac4a1bdcf3b31293512.png" class="" title="在这里插入图片描述"><p>没有就新增</p><img src="/2024/03/15/map-zhong-de-compute-computeifabsent-he-computeifpresent-de-shi-yong-he-qu-bie/038a64f019b84ff496fbce023023bed9.png" class="" title="在这里插入图片描述"><h3 id="4、完整代码"><a href="#4、完整代码" class="headerlink" title="4、完整代码"></a>4、完整代码</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;Long, String&gt; testMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">testMap.put(<span class="number">1L</span>, <span class="string">"张三"</span>);</span><br><span class="line">testMap.put(<span class="number">2L</span>, <span class="string">"李四"</span>);</span><br><span class="line">testMap.put(<span class="number">3L</span>, <span class="string">"王五"</span>);</span><br><span class="line"><span class="comment">//测试，没有新增</span></span><br><span class="line">testMap.computeIfAbsent(<span class="number">4L</span>, aLong -&gt; <span class="string">"computeIfAbsent"</span>);</span><br><span class="line"><span class="comment">//有返回值，不做任何操作</span></span><br><span class="line">testMap.computeIfAbsent(<span class="number">3L</span>, aLong -&gt; <span class="string">"computeIfAbsent2"</span>);</span><br><span class="line"><span class="comment">//Map中有就更新，没有不做操作</span></span><br><span class="line">testMap.computeIfPresent(<span class="number">2L</span>, (aLong, s) -&gt; <span class="string">"computeIfPresent"</span>);</span><br><span class="line"><span class="comment">//Map中没有不做操作</span></span><br><span class="line">testMap.computeIfPresent(<span class="number">5L</span>, (aLong, s) -&gt; <span class="string">"computeIfPresent2"</span>);</span><br><span class="line"><span class="comment">//有就更新</span></span><br><span class="line">testMap.compute(<span class="number">1L</span>, (aLong, s) -&gt; <span class="string">"compute"</span>);</span><br><span class="line"><span class="comment">//没有就新增</span></span><br><span class="line">testMap.compute(<span class="number">6L</span>, (aLong, s) -&gt; <span class="string">"compute2"</span>);</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EasyConnect连接后显示未分配虚拟地址</title>
      <link href="/2024/03/15/easyconnect-lian-jie-hou-xian-shi-wei-fen-pei-xu-ni-di-zhi/"/>
      <url>/2024/03/15/easyconnect-lian-jie-hou-xian-shi-wei-fen-pei-xu-ni-di-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="EasyConnect连接后显示未分配虚拟地址"><a href="#EasyConnect连接后显示未分配虚拟地址" class="headerlink" title="EasyConnect连接后显示未分配虚拟地址"></a>EasyConnect连接后显示未分配虚拟地址</h2><h3 id="1、问题描述"><a href="#1、问题描述" class="headerlink" title="1、问题描述"></a>1、问题描述</h3><blockquote><p>在做一个公司项目的时间，连上<a href="https://so.csdn.net/so/search?q=vpn&amp;spm=1001.2101.3001.7020">vpn</a>后还是无法访问服务器信息，百度了一下之后才发现vpn的连接状态里显示的是未分配虚拟ip。</p></blockquote><blockquote><p>然后就开始百度解决办法，有说卸载重新装easyconnect的，有说下载easyconnect的修复包的等等吧。但是到最后都没有解决</p></blockquote><h3 id="2、问题截图"><a href="#2、问题截图" class="headerlink" title="2、问题截图"></a>2、问题截图</h3><img src="/2024/03/15/easyconnect-lian-jie-hou-xian-shi-wei-fen-pei-xu-ni-di-zhi/image-20240315133559106.png" class="" title="image-20240315133559106"><blockquote><p>这个时间去设备管理器查看，这个Sangfor SSL异常的情况下应该是带有一个黄色的感叹号的</p></blockquote><img src="/2024/03/15/easyconnect-lian-jie-hou-xian-shi-wei-fen-pei-xu-ni-di-zhi/image-20240315133636873.png" class="" title="image-20240315133636873"><h3 id="3、问题解决"><a href="#3、问题解决" class="headerlink" title="3、问题解决"></a>3、问题解决</h3><blockquote><p>如果显示的有黄色感叹号，右键卸载这个设备，然后启动easyConnect，他会自动把组件下载，回来再看就不带黄色感叹号了。</p></blockquote><img src="/2024/03/15/easyconnect-lian-jie-hou-xian-shi-wei-fen-pei-xu-ni-di-zhi/image-20240315133937107.png" class="" title="image-20240315133937107">]]></content>
      
      
      <categories>
          
          <category> VPN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EasyConnect </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HttpClient配置代理</title>
      <link href="/2024/03/14/httpclient-pei-zhi-dai-li/"/>
      <url>/2024/03/14/httpclient-pei-zhi-dai-li/</url>
      
        <content type="html"><![CDATA[<h2 id="HttpClient配置代理"><a href="#HttpClient配置代理" class="headerlink" title="HttpClient配置代理"></a>HttpClient配置代理</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//要访问的网址</span></span><br><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">"http://www.baidu.com"</span>;</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line"><span class="comment">//设置代理的 IP、端口号、协议（替换自己的）</span></span><br><span class="line"><span class="type">HttpHost</span> <span class="variable">proxy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpHost</span>(<span class="string">"自己的代理Ip"</span>,代理的端口号,<span class="string">"http"</span>);</span><br><span class="line"><span class="comment">//设置要访问的HttpHost，即目标站点的HttpHost。  IP、端口号、协议（替换自己的）</span></span><br><span class="line"><span class="type">HttpHost</span> <span class="variable">target</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpHost</span>(<span class="string">"www.baidu.mn"</span>,<span class="number">80</span>,<span class="string">"http"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置认证</span></span><br><span class="line"><span class="type">CredentialsProvider</span> <span class="variable">provider</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BasicCredentialsProvider</span>();</span><br><span class="line"><span class="comment">//第一个参数对应代理httpHost，第二个参数设置代理的用户名和密码，如果代理不需要用户名和密码，填空</span></span><br><span class="line">provider.setCredentials(<span class="keyword">new</span> <span class="title class_">AuthScope</span>(proxy), <span class="keyword">new</span> <span class="title class_">UsernamePasswordCredentials</span>(<span class="string">"代理用户名"</span>, <span class="string">"代理密码"</span>));</span><br><span class="line"><span class="comment">//实例化CloseableHttpClient对象</span></span><br><span class="line"><span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> HttpClients.custom().setDefaultCredentialsProvider(provider).build();</span><br><span class="line"><span class="comment">//把代理设置到请求配置里</span></span><br><span class="line"><span class="type">RequestConfig</span> <span class="variable">requestConfig</span> <span class="operator">=</span> RequestConfig.custom().setProxy(proxy).build();</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建请求实例</span></span><br><span class="line"><span class="type">HttpGet</span> <span class="variable">get</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line"><span class="comment">//将配置设置到请求实例中，如果还有请求头信息，自行设置</span></span><br><span class="line">get.setConfig(requestConfig);</span><br><span class="line"><span class="comment">//发送请求并获得相应</span></span><br><span class="line"><span class="type">CloseableHttpResponse</span> <span class="variable">res</span> <span class="operator">=</span> httpClient.execute(target,get);</span><br><span class="line"><span class="comment">//获取响应码</span></span><br><span class="line"><span class="type">int</span> <span class="variable">statusCode</span> <span class="operator">=</span> res.getStatusLine().getStatusCode();</span><br><span class="line"><span class="comment">//将响应内容转化为String字符串</span></span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> EntityUtils.toString(res.getEntity());</span><br><span class="line"></span><br><span class="line">} <span class="keyword">catch</span> (ClientProtocolException e) {</span><br><span class="line">LOGGER.info(<span class="string">"异常"</span>+e);</span><br><span class="line">} <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">LOGGER.info(<span class="string">"异常"</span>+e);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HttpClient绕过SSL验证</title>
      <link href="/2024/03/14/httpclient-rao-guo-ssl-yan-zheng/"/>
      <url>/2024/03/14/httpclient-rao-guo-ssl-yan-zheng/</url>
      
        <content type="html"><![CDATA[<h2 id="如何绕过SSL验证"><a href="#如何绕过SSL验证" class="headerlink" title="如何绕过SSL验证"></a>如何绕过SSL验证</h2><h3 id="1、在开发中有时间会遇到访问原网站会有提示有风险，需要点击高级继续访问，这个时间使用HttpClient模仿发送请求就需要绕过SSL验证，下面是如何绕过SSL验证"><a href="#1、在开发中有时间会遇到访问原网站会有提示有风险，需要点击高级继续访问，这个时间使用HttpClient模仿发送请求就需要绕过SSL验证，下面是如何绕过SSL验证" class="headerlink" title="1、在开发中有时间会遇到访问原网站会有提示有风险，需要点击高级继续访问，这个时间使用HttpClient模仿发送请求就需要绕过SSL验证，下面是如何绕过SSL验证"></a>1、在开发中有时间会遇到访问原网站会有提示有风险，需要点击高级继续访问，这个时间使用HttpClient模仿发送请求就需要绕过SSL验证，下面是如何绕过SSL验证</h3><ol><li>首先创建一个工具类，将这个createSSLClientDefault()方法复制过去，导入所需要的的jar包</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyManagementException;</span><br><span class="line"><span class="keyword">import</span> java.security.KeyStoreException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.HostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.ClientProtocolException;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.HttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.NoopHostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.TrustStrategy;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.ssl.SSLContextBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Myutils</span> {</span><br><span class="line"><span class="comment">//创建HttpClients 绕过ssl验证所需工具类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> CloseableHttpClient <span class="title function_">createSSLClientDefault</span><span class="params">()</span> {</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line"><span class="type">SSLContext</span> <span class="variable">sslContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SSLContextBuilder</span>().loadTrustMaterial(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">TrustStrategy</span>() {</span><br><span class="line"><span class="comment">// 信任所有</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isTrusted</span><span class="params">(java.security.cert.X509Certificate[] arg0, String arg1)</span></span><br><span class="line"><span class="keyword">throws</span> java.security.cert.CertificateException {</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}).build();</span><br><span class="line"><span class="type">HostnameVerifier</span> <span class="variable">hostnameVerifier</span> <span class="operator">=</span> NoopHostnameVerifier.INSTANCE;</span><br><span class="line"><span class="type">SSLConnectionSocketFactory</span> <span class="variable">sslsf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SSLConnectionSocketFactory</span>(sslContext, hostnameVerifier);</span><br><span class="line"><span class="keyword">return</span> HttpClients.custom().setSSLSocketFactory(sslsf).build();</span><br><span class="line">} <span class="keyword">catch</span> (KeyManagementException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">} <span class="keyword">catch</span> (NoSuchAlgorithmException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">} <span class="keyword">catch</span> (KeyStoreException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> HttpClients.createDefault();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="2、接下来就可以去正常的写代码"><a href="#2、接下来就可以去正常的写代码" class="headerlink" title="2、接下来就可以去正常的写代码"></a>2、接下来就可以去正常的写代码</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用工具类中的方法创建httpClient实例</span></span><br><span class="line"><span class="type">HttpClient</span> <span class="variable">client</span> <span class="operator">=</span> SSL.createSSLClientDefault();</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送HttpGet请求 模板</span></span><br><span class="line"><span class="comment">//创建HttpClient </span></span><br><span class="line"><span class="type">HttpClient</span>  <span class="variable">httpclient</span> <span class="operator">=</span> createSSLClientDefault();</span><br><span class="line"><span class="comment">//发送接口地址</span></span><br><span class="line"><span class="type">HttpGet</span> <span class="variable">httpget</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(<span class="string">"https://127.0.0.1/postandget/testget?iw-apikey=123&amp;iw-cmd=testget&amp;paramValue=1111"</span>);</span><br><span class="line"><span class="comment">//发送请求并接收response </span></span><br><span class="line"><span class="type">HttpResponse</span> <span class="variable">httpresponse</span> <span class="operator">=</span> httpclient.execute(httpget);</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> EntityUtils.toString(httpresponse.getEntity(), <span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送httpPost请求 模板</span></span><br><span class="line"><span class="comment">//创建HttpClient </span></span><br><span class="line"><span class="type">HttpClient</span>  <span class="variable">httpclient</span> <span class="operator">=</span> createSSLClientDefault();</span><br><span class="line"><span class="comment">//发送接口地址</span></span><br><span class="line"><span class="type">HttpPost</span> <span class="variable">httppost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(<span class="string">"https://127.0.0.1/postandget/testpost"</span>);</span><br><span class="line"><span class="comment">//设置请求体格式Content-Type</span></span><br><span class="line">httppost.setHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/json"</span>);</span><br><span class="line"><span class="comment">//定义String请求Json参数体</span></span><br><span class="line">httppost.setEntity(<span class="keyword">new</span> <span class="title class_">StringEntity</span>(<span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">"{\"iw-apikey\":\"123\", \"paramValue1\":\"123\",\"paramValue2\":\"1234\"}"</span>), Charset.forName(<span class="string">"UTF-8"</span>)));</span><br><span class="line"><span class="comment">//发送请求并接收response </span></span><br><span class="line"><span class="type">HttpResponse</span> <span class="variable">httpresponse</span> <span class="operator">=</span> httpclient.execute(httppost);</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> EntityUtils.toString(httpresponse.getEntity(), <span class="string">"UTF-8"</span>);</span><br></pre></td></tr></tbody></table></figure><h3 id="3、这样就可以绕过SSL验证，获取与原网站相同的响应，再去解析"><a href="#3、这样就可以绕过SSL验证，获取与原网站相同的响应，再去解析" class="headerlink" title="3、这样就可以绕过SSL验证，获取与原网站相同的响应，再去解析"></a>3、这样就可以绕过SSL验证，获取与原网站相同的响应，再去解析</h3>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BigDecimal常用API</title>
      <link href="/2024/03/14/bigdecimal-chang-yong-api/"/>
      <url>/2024/03/14/bigdecimal-chang-yong-api/</url>
      
        <content type="html"><![CDATA[<h2 id="BigDecimal常用API"><a href="#BigDecimal常用API" class="headerlink" title="BigDecimal常用API"></a>BigDecimal常用API</h2><h3 id="1、加法-add"><a href="#1、加法-add" class="headerlink" title="1、加法 add"></a>1、加法 add</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">999</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">10000</span>);</span><br><span class="line">a = a.add(b);</span><br><span class="line">System.out.println(a.add(b));<span class="comment">//10999</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2、减法-subtract"><a href="#2、减法-subtract" class="headerlink" title="2、减法 subtract"></a>2、减法 subtract</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">999</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">10000</span>);</span><br><span class="line">a = a.subtract(b);</span><br><span class="line">System.out.println(a);<span class="comment">//-9001</span></span><br></pre></td></tr></tbody></table></figure><h3 id="3、乘法-multiply"><a href="#3、乘法-multiply" class="headerlink" title="3、乘法 multiply"></a>3、乘法 multiply</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">999</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">10000</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">c</span> <span class="operator">=</span> a.multiply(b);</span><br><span class="line">System.out.println(<span class="string">"a*b="</span> + c);</span><br></pre></td></tr></tbody></table></figure><h3 id="4、除法-divide"><a href="#4、除法-divide" class="headerlink" title="4、除法 divide"></a>4、除法 divide</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">999</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">10000</span>);</span><br><span class="line">c = a.divide(b);</span><br><span class="line">System.out.println(<span class="string">"a/b="</span> + c);</span><br></pre></td></tr></tbody></table></figure><h3 id="5、求余-divideAndRemainder"><a href="#5、求余-divideAndRemainder" class="headerlink" title="5、求余 divideAndRemainder"></a>5、求余 divideAndRemainder</h3><blockquote><p>divideAndRemainder方法会返回一个长度为2的BigDecimal数组，第一个为商，第二个为余数</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">999</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">10000</span>);</span><br><span class="line">BigDecimal[] c = a.divideAndRemainder(b);</span><br><span class="line">System.out.println(<span class="string">"a/b="</span> + c[<span class="number">0</span>] + <span class="string">"余数"</span> + c[<span class="number">1</span>]);</span><br></pre></td></tr></tbody></table></figure><h3 id="6、比较大小-compareTo"><a href="#6、比较大小-compareTo" class="headerlink" title="6、比较大小 compareTo"></a>6、比较大小 compareTo</h3><p>BigDecimal可以通过compareTo方法来进行比较。<br>返回的结果是int类型，-1表示小于，0是等于，1是大于。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">999</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a.compareTo(b) &gt; <span class="number">0</span>) {</span><br><span class="line">    System.out.println(<span class="string">"a大于b"</span>);</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (a.compareTo(b) == <span class="number">0</span>) {</span><br><span class="line">    System.out.println(<span class="string">"a等于b"</span>);</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">    System.out.println(<span class="string">"a小于b"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="7、处理小数"><a href="#7、处理小数" class="headerlink" title="7、处理小数"></a>7、处理小数</h3><blockquote><p>下面是取舍模式</p></blockquote><ul><li><p>==ROUND_UP==  ： 对于正数来说是舍弃小数后，加一，对于负数来说，舍弃小数后减一。例如：100.4，取整数为101，-100.5，取整数为-101</p></li><li><p>==ROUND_DOWN==  ： 直接舍弃小数或者说精确位后的小数</p></li><li><p>==ROUND_CEILING== : 如果 BigDecimal 是正的，则做 ROUND_UP 操作；如果为负，则做 ROUND_DOWN 操作 （取附近较大的整数）。</p></li><li><p>==ROUND_FLOOR== ： 如果 BigDecimal 是正的，则做 ROUND_DOWN 操作；如果为负，则做 ROUND_UP  操作 （取附近较小的整数）。</p></li><li><p>==ROUND_HALF_UP== ： 四舍五入，0.5向上取整 100.5 -&gt; 101</p></li><li><p>==ROUND_HALF_DOWN== ： 四舍五入，0.5向下取整 100.5 -&gt; 100</p></li><li><p>==ROUND_UNNECESSARY== ： 如果存在小数位，就抛ArithmeticException 异常。</p></li></ul><p>单独设置</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">"998.5"</span>);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">up</span> <span class="operator">=</span> a.setScale(<span class="number">0</span>, RoundingMode.UP);</span><br><span class="line">System.out.println( <span class="string">"up ======= "</span> + up);</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">down</span> <span class="operator">=</span> a.setScale(<span class="number">0</span>, RoundingMode.DOWN);</span><br><span class="line">System.out.println( <span class="string">"down ======= "</span> + down);</span><br><span class="line"><span class="comment">//取最近的较大整数</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">ceiling</span> <span class="operator">=</span> a.setScale(<span class="number">0</span>, RoundingMode.CEILING);</span><br><span class="line">System.out.println( <span class="string">"ceiling ======= "</span> + ceiling);</span><br><span class="line"><span class="comment">//取最近的较小整数</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">floor</span> <span class="operator">=</span> a.setScale(<span class="number">0</span>, RoundingMode.FLOOR);</span><br><span class="line">System.out.println( <span class="string">"floor ======= "</span> + floor);</span><br><span class="line"><span class="comment">//四舍五入，0.5向上取整</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">halfUp</span> <span class="operator">=</span> a.setScale(<span class="number">0</span>, RoundingMode.HALF_UP);</span><br><span class="line">System.out.println( <span class="string">"halfUp ======= "</span> + halfUp);</span><br><span class="line"><span class="comment">//四舍五入，0.5向下取整</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">halfDown</span> <span class="operator">=</span> a.setScale(<span class="number">0</span>, RoundingMode.HALF_DOWN);</span><br><span class="line">System.out.println( <span class="string">"halfDown ======= "</span> + halfDown);</span><br></pre></td></tr></tbody></table></figure><p>除法运用</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//结果保留两位小数</span></span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">divide</span> <span class="operator">=</span> a.divide(b, <span class="number">2</span>, RoundingMode.UP);</span><br><span class="line">System.out.println(divide);</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java 计算 BigDecimal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>去除特殊的空格</title>
      <link href="/2024/03/14/qu-chu-te-shu-de-kong-ge/"/>
      <url>/2024/03/14/qu-chu-te-shu-de-kong-ge/</url>
      
        <content type="html"><![CDATA[<h2 id="去除特殊的空格"><a href="#去除特殊的空格" class="headerlink" title="去除特殊的空格"></a>去除特殊的空格</h2><blockquote><p>一般是爬虫的时间会遇到这些奇怪的情况</p></blockquote><h3 id="1、去除字符串首尾的普通空格"><a href="#1、去除字符串首尾的普通空格" class="headerlink" title="1、去除字符串首尾的普通空格"></a>1、去除字符串首尾的普通空格</h3><p>字符串可以使用 .trim()方法去除首尾的空格，但是无法去除中间的空格</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">" ashjs klkl     "</span>;</span><br><span class="line">System.out.println(a.trim());</span><br></pre></td></tr></tbody></table></figure><h3 id="2、去除字符串中的制表符"><a href="#2、去除字符串中的制表符" class="headerlink" title="2、去除字符串中的制表符"></a>2、去除字符串中的制表符</h3><p>这种情况一般是前端的数据之类的，使用node解析后获得的字符串，会将前端的换行、退格等转义成对应的转义字符。如： \t \n \r \s等</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  有的操作系统\r\n连用表示是换行，有的是只需要\n就可以表示</span></span><br><span class="line"><span class="type">String</span> <span class="variable">b</span> <span class="operator">=</span> <span class="string">"a\r\nbs\tvvvv"</span>;</span><br><span class="line">System.out.println(b);</span><br><span class="line">b = b.replaceAll(<span class="string">"\n|\r|\t|\\s"</span>,<span class="string">""</span>);</span><br><span class="line">System.out.println(b);</span><br></pre></td></tr></tbody></table></figure><img src="/2024/03/14/qu-chu-te-shu-de-kong-ge/image-20240314114654784.png" class="" title="image-20240314114654784"><h3 id="3、去除特殊的空格"><a href="#3、去除特殊的空格" class="headerlink" title="3、去除特殊的空格"></a>3、去除特殊的空格</h3><p>有的前端的&amp;nbsp; 我们使用node解析后获取的字符串会自动转空格，但是不论是使用trim()方法还是替换转义字符都去不掉这个空格。</p><img src="/2024/03/14/qu-chu-te-shu-de-kong-ge/image-20240314112538807-1710485332761-1.png" class="" title="image-20240314112538807"><p>去除</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b = b.replaceAll(<span class="string">"\\u00a0"</span>, <span class="string">""</span>);</span><br></pre></td></tr></tbody></table></figure><p>常见的前端空格对应的Unicode码</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nbsp   对应   \u00a0</span><br><span class="line">emsp   对应  \u2003</span><br><span class="line">ensp   对应  \u2002</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
